---
- name: upgrade software packages to latest version
  apt: 
    update_cache: yes
    upgrade: dist 

- name: autoremove unneeded packages
  command: apt-get -y autoremove
  register: aptget_autoremove
  changed_when: aptget_autoremove.stdout.find("REMOVE") != -1

- name: autoclean archived packages
  command: apt-get -y autoclean
  changed_when: false

- name: ensure unattended-upgrades package is installed
  apt:
    pkg: "{{ item }}"
    state: latest
    update_cache: yes
    cache_valid_time: 600
  with_items:
    - unattended-upgrades

- name: update /etc/apt/apt.conf.d/20auto-updates from template
  template:
    src: etc/apt/apt.conf.d/20auto-upgrades
    dest: /etc/apt/apt.conf.d/20auto-upgrades
    owner: root
    group: root
    mode: 0644
 
- name: update /etc/apt/apt.conf.d/50unattended-updates from template
  template:
    src: etc/apt/apt.conf.d/50unattended-upgrades
    dest: /etc/apt/apt.conf.d/50unattended-upgrades
    owner: root
    group: root
    mode: 0644

- name: register running kernel version
  command: uname -r
  register: running_kernel
  changed_when: false

- name: register installed kernel version
  shell: dpkg -l | grep "linux-image-[0-9]" | sort | tail -1 | perl -ane 'print substr($F[1], 12), "\n"'
  register: installed_kernel
  changed_when: false

- name: reboot if kernel version has changed
  command: /sbin/reboot
  register: reboot_result
  when: upgrade_enable_reboot_on_kernel_change and installed_kernel.stdout != running_kernel.stdout

- name: wait for reboot
  sudo: False
  delegate_to: localhost
  wait_for: 
    host: "{{ ansible_ssh_host|default(inventory_hostname) }}" 
    port: "{{ ansible_ssh_port|default(22) }}"
    delay: 30 
    timeout: 600
    state: started
  when: reboot_result|changed

